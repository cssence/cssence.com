extends base.pug

block content
	include fragments/hero

	- const isHome = urlPath === '/'
	block intro
		.article!= contents
		if isHome
			include fragments/home

	if typeof latest === 'undefined' || (typeof latest === 'number' && latest > 0)
		- let cards = getFilteredPosts(posts, urlPath)
		- const numberOfPostsInCategory = cards.length
		- const latestOnly = typeof latest === 'number' && numberOfPostsInCategory > latest
		- if (latestOnly) cards = cards.slice(0, latest)
		- if (urlPath === '/about/about') cards.sort((a, b) => b.revised - a.revised)
		section.posts
			h2(id=isHome ? 'latest' : 'overview')= isHome ? 'Latest' : (latestOnly ? 'Latest posts' : 'All posts')
				small.visually-hidden= ' (most recent first)'
			include fragments/cards
			if !isHome
				.article.screen
					//- TODO remove or replace .article
					p
						- const writtenForm = (n) => countLong[n] ? countLong[n].toLowerCase() : n
						if latestOnly
							= `The list above contains only the ${writtenForm(latest)} most recent entries.`
							= ` In this section alone, there are ${writtenForm(numberOfPostsInCategory)} blog posts, and there are other sections on this site.`
						else
							= `The list above contains ${writtenForm(numberOfPostsInCategory)} entries, but there are a lot more in other sections on this site.`
						= ' To see what else is going on, you may want to head over to the '
						a(href="/") #[strong Home] page
						= ' or browse using the '
						a(href="#navigation") navigation
						= ' below.'
	if highlights
		each highlight in highlights
			section.posts
				- const placement = highlight.posts
				- const cards = posts.filter((post) => placement.includes(post.urlPath))
				- cards.sort((a, b) => placement.indexOf(a.urlPath) > placement.indexOf(b.urlPath))
				h2(id=highlight.id)= highlight.name
					span.visually-hidden= ' posts'
				- const orderedCards = highlight.id !== 'featured'
				include fragments/cards

	include fragments/metadata
